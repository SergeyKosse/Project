@using Project.Mvc.Helpers
@using Project.Mvc.ViewModels
@using Project.Mvc.Views
@using Project.Service.Models
@model VehicleMakeViewModel


@{
    var baseUrl = $"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}";
    var queryParams = Model.QueryParams;
    var updatedQueryParams = new QueryParameters(queryParams);
    

    var asc_url = Url.BuildUrl(
        baseUrl, 
        queryParams.ToDictionary(), 
        new Dictionary<string, string>{{"Descending", false.ToString()}});
    
    var desc_url = Url.BuildUrl(
        baseUrl, 
        queryParams.ToDictionary(), 
        new Dictionary<string, string>{{"Descending", true.ToString()}});

    var prevPageUrl = "#";
    var nextPageUrl = "#";
    
    if (queryParams.Page > 1)
    {
        updatedQueryParams.Page = queryParams.Page - 1;
        prevPageUrl = Url.BuildUrl(
            "/VehicleMakes/Index", 
            queryParams.ToDictionary(), 
            updatedQueryParams.ToDictionary());
    }

    if (queryParams.Page < Model.PagedResult.TotalPages)
    {
        updatedQueryParams.Page = queryParams.Page + 1;
        nextPageUrl = Url.BuildUrl(
            "/VehicleMakes/Index", 
            queryParams.ToDictionary(), 
            updatedQueryParams.ToDictionary());
    }
}


<h1 class="mb-3">Vehicle makes</h1>

<form asp-action="Index" method="get">
    <div class="input-group mb-3">
        <input type="text" name="filter" value="@queryParams.Filter" class="form-control">
        <input type="submit" name="search" value="Search" class="btn btn-primary">
        <a asp-action="Index" class="btn btn-secondary">Reset</a>
    </div>

</form>

<div class="mb-5">
    Ordering: <a href="@asc_url" class="btn btn-primary">ASC</a>
    <a href="@desc_url" class="btn btn-primary">DESC</a>
</div>

@foreach (var item in Model.PagedResult.Items)
{
    <div class="row mb-3">
    <div class="col-sm-4">@item.Name</div>
    <div class="col-sm-5">@item.Abrv</div>
    <div class="col-sm-3 text-end">
        <a asp-action="Show" asp-route-id="@item.Id" class="btn btn-primary">View</a>
        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary">Edit</a>
        <form asp-action="Delete" asp-controller="VehicleMakes" asp-route-id="@item.Id" method="post" class="d-inline"
            onsubmit="return confirm('Are you sure you want to delete this record?');">
            <input type="hidden" name="_method" value="DELETE" />
            <button type="submit" class="btn btn-danger">Delete</button>
        </form>
    </div>

</div>
}

<ul class="pagination">
    <li class="page-item">
        <a href="@prevPageUrl" class="page-link">Prev</a>
    </li>

    @for (int i = 1; i <= Model.PagedResult.TotalPages; i++)
    {
        updatedQueryParams.Page = i;
        var pageUrl = Url.BuildUrl(
            "/VehicleMakes/Index", queryParams.ToDictionary(), 
            updatedQueryParams.ToDictionary());
        var add_class = i == (int)queryParams.Page ? "fw-bold" : "";
        
        <li class="page-item">
            <a href="@pageUrl" class="page-link @add_class">@i</a>
        </li>
    }
    <li class="page-item">
        <a href="@nextPageUrl" class="page-link">Next</a>
    </li>
</ul>

<div class="text-end">
    <a asp-action="New" class="btn btn-primary">New Record</a>
</div>